{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "mintingProcess_address",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "svg_address",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_vrf",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "_keeper",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "_oracle",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "_startRaffel",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_checkOracle",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "numberOfNewPlayers",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "BuyPlayers",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "DrawWinnerOfRaffel",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "TeanNFT",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "UniqueNFT",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "UpdatePlayer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "UpgradeAllTokens",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "buyPlayer",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "changeOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_vrf",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "_keeper",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "_oracle",
						"type": "bool"
					}
				],
				"name": "changeSimulation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "checkUpkeep",
				"outputs": [
					{
						"internalType": "bool",
						"name": "upkeepNeeded",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "performData",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "_nft_addresses",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "performData",
						"type": "bytes"
					}
				],
				"name": "performUpkeep",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "simulateKeeper",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "upgradeAllToMax",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_payout",
						"type": "address"
					}
				],
				"name": "withDraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"performUpkeep(bytes)": {
					"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
					"params": {
						"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"performUpkeep(bytes)": {
					"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Dynamic_Oracle_Based_NFT_BCC22/contracts/interface.sol": "Interface"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/KeeperBase.sol": {
			"keccak256": "0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a",
			"license": "MIT",
			"urls": [
				"bzz-raw://d39ed8c38c1527a48c08ccd905a58a438998d38700c238c371ba522452f99d51",
				"dweb:/ipfs/QmSUL2zq3Gm1yVXgAsqaEH8vcX3z77WeTphsDkFsWRrKvy"
			]
		},
		"@chainlink/contracts/src/v0.8/KeeperCompatible.sol": {
			"keccak256": "0xfdb84fea1ee213662ae66b95d4f620be73b7af5ede58be3d330b222b9b566d95",
			"license": "MIT",
			"urls": [
				"bzz-raw://e960e1753c1a7c3da0ead8889631662cc77d8359f8de86bdc958a57960b82127",
				"dweb:/ipfs/Qma8iUq8T8vWfHcRSgv38dhVyzdpKoDPR5jgpr31WYZSvx"
			]
		},
		"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
			"keccak256": "0xec8b7e3032e887dd0732d2a5f8552ddce64a99a81b0008ef0bcf6cad68a535fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://362303461c62155063196629bf0f26377e024f303ce4ec0258ae67ce4cd1b884",
				"dweb:/ipfs/QmNyBvuwApTXTL1Ew7EjGURbyWRiYuRZxWFGY1qjZEAEK2"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol": {
			"keccak256": "0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://a27100d0f91626ace3dd6912d41033a9bba43ea31b5e17f3d847fef1155398a4",
				"dweb:/ipfs/QmepkhmjCMnyPF166QcNEojmc1ZeSNPRs619r5GpU1YRPn"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
			"keccak256": "0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd",
				"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
			"keccak256": "0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b4f2ac9fe4e83334c0cc7b070989f133647f20c2b2e8f2224e10d37bebc6df",
				"dweb:/ipfs/QmYS2z7xmTArVpxiNM8Czj1qKL56HMw61Lzdjto9m3B5PL"
			]
		},
		"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
			"keccak256": "0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9",
			"license": "MIT",
			"urls": [
				"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5",
				"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb"
			]
		},
		"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
			"keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
			"license": "MIT",
			"urls": [
				"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
				"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
			]
		},
		"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
			"keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
			"license": "MIT",
			"urls": [
				"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
				"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
				"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
			"license": "MIT",
			"urls": [
				"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
				"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"Dynamic_Oracle_Based_NFT_BCC22/contracts/ERC1155_edited.sol": {
			"keccak256": "0x740783a544897309a87b262ee041beb3138270be23bd872bb39001bd48699885",
			"license": "MIT",
			"urls": [
				"bzz-raw://af86426819465c79a5064f7fc65259094e9e410564c71e0b9be4891cf79447de",
				"dweb:/ipfs/QmbQceZSxPnFjxtZSLyPoKKPxwJ6GyUAwtgEvxoehTJRmq"
			]
		},
		"Dynamic_Oracle_Based_NFT_BCC22/contracts/getPlayerSvg.sol": {
			"keccak256": "0x253e70f46c8a2792255f2a4763b2c601b300c29a41a6dbb8b9bef8e7167a6512",
			"license": "MIT",
			"urls": [
				"bzz-raw://958f896b2e94bf2bd5bd526dd462b316885389b305a2b972ea730e014b8a0900",
				"dweb:/ipfs/QmXPBXEPoeVwTCyHAMGjqDyU9P4Nyvq9SwbutcsynPGSd3"
			]
		},
		"Dynamic_Oracle_Based_NFT_BCC22/contracts/interface.sol": {
			"keccak256": "0x67fa2ba3cfca5c8fd3fd4df10478ac279f39665b7036b77601d10a6594cea378",
			"license": "MIT",
			"urls": [
				"bzz-raw://af0d649817cf2199dc981b0d9abcea402bf8ef1d9d24eb910c3fa378e987fa43",
				"dweb:/ipfs/Qmc3hdhebVABsoEm6NCFP696enWVUZbdhsZuZQ5DaFMRet"
			]
		},
		"Dynamic_Oracle_Based_NFT_BCC22/contracts/mintingProcess.sol": {
			"keccak256": "0xa96fa2a2af491f17e85b8b51c78c9628afb0f2d91af4a780d48c192be61c7776",
			"license": "MIT",
			"urls": [
				"bzz-raw://6c115a39de3e49719cd2c3ce6640e9986dc52b2b8aae83959f6a2ba3bd460789",
				"dweb:/ipfs/Qmd5oLfF2soLPNpTxi7sdWSVLezGS5tUfysZBNKyyi2Zk4"
			]
		},
		"Dynamic_Oracle_Based_NFT_BCC22/contracts/players.sol": {
			"keccak256": "0xad28144931764b7751cb1f3f3ea46f3286103c0900a12367aaa179ca51a41f25",
			"license": "MIT",
			"urls": [
				"bzz-raw://c46037cd560d10b9214654f5642abdedb78d713ed0e7d852f8adc4ab2be6b62a",
				"dweb:/ipfs/QmdNqjjmgUmtK9qU9hUH81q59FfJeRe9dRFAkxnvzTCbbK"
			]
		},
		"Dynamic_Oracle_Based_NFT_BCC22/contracts/svg.sol": {
			"keccak256": "0xb1df46136b84dd65aaa561a0bb1f63568b1dd198d6b8c61532dfa9cfaa8ea604",
			"license": "MIT",
			"urls": [
				"bzz-raw://8bc9a6172dbe87f8c4e6c4053127258b3a5e60b3a2fd52949d2e0ebe4a09f633",
				"dweb:/ipfs/QmNynjrgJv6uWQRNFQJfSkqiVPfwkVZHPrPzt3Eek6Ukk8"
			]
		}
	},
	"version": 1
}